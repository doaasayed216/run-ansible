version: 2.1
commands:
  destroy-environment:
    description: Destroy backend and frontend cloudformation stacks given a workflow ID.
    parameters:
      workflow_id:
        type: string      
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo "Destroying environment: << parameters.workflow_id >> "
            aws s3 rm s3://udapeople-<< parameters.workflow_id >> --recursive
            aws cloudformation delete-stack --stack-name udapeople-backend-<< parameters.workflow_id >>
            aws cloudformation delete-stack --stack-name udapeople-frontend-<< parameters.workflow_id >>

  revert-migrations:
    description: Revert the last migration
    parameters:
      workflow_id:
          type: string      
    steps:
      - run:
          name: Revert migrations
          when: on_fail
          command: |
            npm install -g n
            n 12.22.9
            cd ~/project/backend
            npm install
            npm run update
            if grep -q "has been executed successfully." ~/project/backend/migrations_dump.txt
            then
                npm run migrations:revert                
            fi
jobs:

  smoke-test:
    docker:
      - image: amazon/aws-cli 
    steps:
      - checkout
      - run:
          name: test
          command: |
            echo "has been executed succes." > ~/project/backend/migrations_dump.txt
      - run:
          name: Install dependencies
          command: |
            curl --silent --location https://rpm.nodesource.com/setup_16.x | bash -
            yum -y install nodejs npm 
            yum -y install tar gzip
      - run:
          name: update node version
          command: |
            npm install -g n
            n 12.22.9
      - run: 
          name: check node version
          command: |
            node -v
      - run:
          name: Backend smoke test.
          command: |
            export BACKEND_IP=$(aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text)
            export API_URL="http://${BACKEND_IP}:3030"
            echo "${API_URL}"
            if curl "${API_URL}/api/status" | grep "ok"
            then
                return 0
            else
                return 1
            fi
      - run:
          name: Frontend smoke test.
          command: |
            URL="http://udapeople-${CIRCLE_WORKFLOW_ID:0:7}.s3-website-us-east-1.amazonaws.com/#/employees"            
            echo ${URL} 
            if curl -s ${URL} | grep "Welcome"
            then
                return 0
            else
                return 1
            fi
      - revert-migrations:
          workflow_id: ${CIRCLE_WORKFLOW_ID:0:7}
  
workflows:
  default:
    jobs:
      - smoke-test